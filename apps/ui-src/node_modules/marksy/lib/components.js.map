{"version":3,"sources":["../src/components.js"],"names":["marksy","options","components","tracker","tree","elements","nextElementId","toc","currentId","renderer","html","elementId","presets","code","Object","keys","map","key","mockedReact","createElement","tag","props","componentProps","indexOf","assign","context","children","Function","push","e","language","compile","content","markedOptions","smartypants"],"mappings":"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","file":"components.js","sourcesContent":["import marked from 'marked';\nimport { transform } from 'babel-standalone';\nimport createRenderer, { codeRenderer } from './createRenderer';\n\nexport function marksy(options = {}) {\n  // eslint-disable-next-line no-param-reassign\n  options.components = options.components || {};\n\n  const tracker = {\n    tree: null,\n    elements: null,\n    nextElementId: null,\n    toc: null,\n    currentId: [],\n  };\n  const renderer = createRenderer(tracker, options, {\n    html(html) {\n      try {\n        // eslint-disable-next-line no-plusplus\n        const elementId = tracker.nextElementId++;\n\n        const { code } = transform(html, {\n          presets: ['react'],\n        });\n        const components = Object.keys(options.components).map(key => options.components[key]);\n        const mockedReact = {\n          createElement(tag, props = {}, ...children) {\n            const componentProps =\n              components.indexOf(tag) >= 0\n                ? Object.assign(props || {}, {\n                    // eslint-disable-next-line no-plusplus\n                    key: tracker.nextElementId++,\n                    context: tracker.context,\n                  })\n                : props;\n\n            return options.createElement(tag, componentProps, children);\n          },\n        };\n\n        tracker.elements[elementId] =\n          // eslint-disable-next-line no-new-func\n          new Function('React', ...Object.keys(options.components), `return ${code}`)(\n            mockedReact,\n            ...components\n          ) || null;\n\n        tracker.tree.push(tracker.elements[elementId]);\n\n        return `{{${elementId}}}`;\n      } catch (e) {\n        //\n      }\n      return null;\n    },\n    code(code, language) {\n      if (language === 'marksy') {\n        return renderer.html(code);\n      }\n      return codeRenderer(tracker, options)(code, language);\n    },\n  });\n\n  return function compile(content, markedOptions = {}, context = {}) {\n    tracker.tree = [];\n    tracker.elements = {};\n    tracker.toc = [];\n    tracker.nextElementId = 0;\n    tracker.context = context;\n    tracker.currentId = [];\n    marked(content, Object.assign({ renderer, smartypants: true }, markedOptions));\n\n    return { tree: tracker.tree, toc: tracker.toc };\n  };\n}\n\nexport default function(options) {\n  return marksy(options);\n}\n"]}