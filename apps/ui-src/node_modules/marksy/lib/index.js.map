{"version":3,"sources":["../src/index.js"],"names":["marksy","options","tracker","tree","elements","nextElementId","toc","currentIdLevel","currentId","renderer","code","language","elementId","components","Object","keys","map","key","mockedReact","tag","children","props","componentProps","indexOf","assign","context","createElement","Function","push","e","compile","content","markedOptions","smartypants"],"mappings":";;;;;QAGgBA,M,GAAAA,M;;kBA8DD,UAASC,OAAT,EAAkB;AAC/B,SAAOD,OAAOC,OAAP,CAAP;AACD,C;;AAnED;;;;AACA;;;;;;;;AAEO,SAASD,MAAT,GAA8B;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AACnC,MAAMC,UAAU;AACdC,UAAM,IADQ;AAEdC,cAAU,IAFI;AAGdC,mBAAe,IAHD;AAIdC,SAAK,IAJS;AAKdC,oBAAgB,CALF;AAMdC,eAAW;AANG,GAAhB;AAQA,MAAMC,WAAW,8BAAeP,OAAf,EAAwBD,OAAxB,EAAiC;AAChDS,QADgD,gBAC3CA,KAD2C,EACrCC,QADqC,EAC3B;AACnB,UAAIA,aAAa,QAAjB,EAA2B;AACzB,YAAI;AACF;AACA,cAAMC,YAAYV,QAAQG,aAAR,EAAlB;;AAEA,cAAMQ,aAAaC,OAAOC,IAAP,CAAYd,QAAQY,UAApB,EAAgCG,GAAhC,CAAoC;AAAA,mBAAOf,QAAQY,UAAR,CAAmBI,GAAnB,CAAP;AAAA,WAApC,CAAnB;AACA,cAAMC,cAAc,SAAdA,WAAc,CAACC,GAAD,EAAkC;AAAA,8CAAbC,QAAa;AAAbA,sBAAa;AAAA;;AAAA,gBAA5BC,KAA4B,uEAApB,EAAoB;;AACpD,gBAAMC,iBACJT,WAAWU,OAAX,CAAmBJ,GAAnB,KAA2B,CAA3B,GACIL,OAAOU,MAAP,CAAcH,SAAS,EAAvB,EAA2B;AACzB;AACAJ,mBAAKf,QAAQG,aAAR,EAFoB;AAGzBoB,uBAASvB,QAAQuB;AAHQ,aAA3B,CADJ,GAMIJ,KAPN;;AASA,mBAAOpB,QAAQyB,aAAR,CAAsBP,GAAtB,EAA2BG,cAA3B,EAA2CF,QAA3C,CAAP;AACD,WAXD;;AAaAlB,kBAAQE,QAAR,CAAiBQ,SAAjB;AACE;AACA,6CAAIe,QAAJ,iBAAa,GAAb,sBAAqBb,OAAOC,IAAP,CAAYd,QAAQY,UAApB,CAArB,gBAAgEH,KAAhE,yBACEQ,WADF,4BAEKL,UAFL,OAGK,IALP;;AAOAX,kBAAQC,IAAR,CAAayB,IAAb,CAAkB1B,QAAQE,QAAR,CAAiBQ,SAAjB,CAAlB;;AAEA,wBAAYA,SAAZ;AACD,SA5BD,CA4BE,OAAOiB,CAAP,EAAU;AACV;AACD;AACD,eAAO,IAAP;AACD;AACD,aAAO,kCAAa3B,OAAb,EAAsBD,OAAtB,EAA+BS,KAA/B,EAAqCC,QAArC,CAAP;AACD;AArC+C,GAAjC,CAAjB;;AAwCA,SAAO,SAASmB,OAAT,CAAiBC,OAAjB,EAA4D;AAAA,QAAlCC,aAAkC,uEAAlB,EAAkB;AAAA,QAAdP,OAAc,uEAAJ,EAAI;;AACjEvB,YAAQC,IAAR,GAAe,EAAf;AACAD,YAAQE,QAAR,GAAmB,EAAnB;AACAF,YAAQI,GAAR,GAAc,EAAd;AACAJ,YAAQG,aAAR,GAAwB,CAAxB;AACAH,YAAQuB,OAAR,GAAkBA,OAAlB;AACAvB,YAAQM,SAAR,GAAoB,EAApB;AACA,0BAAOuB,OAAP,EAAgBjB,OAAOU,MAAP,CAAc,EAAEf,kBAAF,EAAYwB,aAAa,IAAzB,EAAd,EAA+CD,aAA/C,CAAhB;;AAEA,WAAO,EAAE7B,MAAMD,QAAQC,IAAhB,EAAsBG,KAAKJ,QAAQI,GAAnC,EAAP;AACD,GAVD;AAWD","file":"index.js","sourcesContent":["import marked from 'marked';\nimport createRenderer, { codeRenderer } from './createRenderer';\n\nexport function marksy(options = {}) {\n  const tracker = {\n    tree: null,\n    elements: null,\n    nextElementId: null,\n    toc: null,\n    currentIdLevel: 0,\n    currentId: [],\n  };\n  const renderer = createRenderer(tracker, options, {\n    code(code, language) {\n      if (language === 'marksy') {\n        try {\n          // eslint-disable-next-line no-plusplus\n          const elementId = tracker.nextElementId++;\n\n          const components = Object.keys(options.components).map(key => options.components[key]);\n          const mockedReact = (tag, props = {}, ...children) => {\n            const componentProps =\n              components.indexOf(tag) >= 0\n                ? Object.assign(props || {}, {\n                    // eslint-disable-next-line no-plusplus\n                    key: tracker.nextElementId++,\n                    context: tracker.context,\n                  })\n                : props;\n\n            return options.createElement(tag, componentProps, children);\n          };\n\n          tracker.elements[elementId] =\n            // eslint-disable-next-line no-new-func\n            new Function('h', ...Object.keys(options.components), `return ${code}`)(\n              mockedReact,\n              ...components\n            ) || null;\n\n          tracker.tree.push(tracker.elements[elementId]);\n\n          return `{{${elementId}}}`;\n        } catch (e) {\n          //\n        }\n        return null;\n      }\n      return codeRenderer(tracker, options)(code, language);\n    },\n  });\n\n  return function compile(content, markedOptions = {}, context = {}) {\n    tracker.tree = [];\n    tracker.elements = {};\n    tracker.toc = [];\n    tracker.nextElementId = 0;\n    tracker.context = context;\n    tracker.currentId = [];\n    marked(content, Object.assign({ renderer, smartypants: true }, markedOptions));\n\n    return { tree: tracker.tree, toc: tracker.toc };\n  };\n}\n\nexport default function(options) {\n  return marksy(options);\n}\n"]}